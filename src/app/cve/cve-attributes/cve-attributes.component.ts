import { Component, Input } from '@angular/core';
import { CveService } from '../../services/cve.service';

@Component({
    selector: 'app-cve-attributes',
    templateUrl: './cve-attributes.component.html',
    styleUrl: './cve-attributes.component.scss',
})
export class CveAttributesComponent {
    @Input() cveId: string = '';
    details: any = null;
    score: number = 1;
    vdoLabels: any[] = [];
    constructor(private cveService: CveService) {}
    ngOnInit(): void {
        this.getCveDetails();
        this.getVdoLabels();
    }

    getCveDetails() {
        this.cveService.getDetails(this.cveId).subscribe((response) => {
            this.details = response;
        });
    }

    extractSourceName(url: string): string {
        try {
            const parsedUrl = new URL(url);
            return parsedUrl.hostname;
        } catch (e) {
            return 'Source (N/A)';
        }
    }

    impactMethod: any[] = [];
    logicalImpact: any[] = [];

    getVdoLabels() {
        this.cveService.getVdoLabels(this.cveId).subscribe((response) => {
            if (response.vdoLabels) {
                this.vdoLabels = Array.from(response.vdoLabels);
                this.logicalImpact = this.vdoLabels
                    .filter((item) => item.vdoNounGroup === 'Logical Impact')
                    .map((item) => item.vdoLabel);

                this.impactMethod = this.vdoLabels
                    .filter((item) => item.vdoNounGroup === 'Impact Method')
                    .map((item) => item.vdoLabel);
            }
            this.score = response.cvss;
        });
    }

    getSeverityScore(score: number): string {
        if(this.score!=null){
            var sevirity= this.score>=0 && this.score < 3
            ? 'Low'
            : this.score < 6
            ? 'Medium'
            : this.score < 9
            ? 'High'
            : 'Critical';
        return sevirity;

        }else{
            return 'N/A'
        }

    }

    getSeverityColor(): string {
        if (this.score!=null) {
            const severity = this.getSeverityScore(this.score);
            return severity == 'Low'
                ? 'text-success'
                : severity == 'Medium'
                ? 'text-warning'
                : severity == 'High'
                ? 'text-danger'
                : 'text-dark';
        } else {
            return 'text-dark';
        }
    }
}
